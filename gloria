import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.Period;
import java.time.YearMonth;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Scanner;
import java.util.ArrayList;

public void RealizarPago() {
        raja.nextLine();
        double ResultadoProductos=sumarPrecios();
        double IGV = ResultadoProductos * 0.18;
        double SubTotal = ResultadoProductos - IGV;
        System.out.println("El subTotal es: " + SubTotal);
        System.out.println("El IGV es: " + IGV);
        System.out.println("El Total a Pagar de Sus Compras es: " + ResultadoProductos);
        System.out.println("Relizar el Pago");
        System.out.println("  (1) SI  | (2) NO   ");
        String Pago = raja.nextLine();
        switch (Pago) {
            case "1":
                System.out.println("Metodo de Pago");
                System.out.println("Opcion 1: Yape");
                System.out.println("Ocpion 2: Tarjeta de credito");
                String OpcPago = raja.nextLine();
                switch (OpcPago) {
                    case "1":
                        while (true) {
                            System.out.println("Ingrese Numero Con una Cuenta Yape");
                            String yape = raja.nextLine();
                            if (yape.length() == 9 && yape.matches("[0-9]+")) {
                                System.out.println("Numero Valido");
                                while (true){
                                    System.out.println("Ingrese Su Codigo De Validacion");
                                    String CodidoYape= raja.nextLine();
                                    if (CodidoYape.length() == 6 && CodidoYape.matches("[0-9]+")){
                                        System.out.println("Codigo Aceptado");
                                        break;
                                    }
                                    else {
                                        System.out.println("Codigo Incorrect0 UwU");
                                    }
                                }
                                break;
                            }else {
                                System.out.println("Numero no Valido");
                            }
                        }
                        System.out.println("Se realizo el pago");
                        Factura();
                        break;
                    case "2":
                        while (true) {
                            System.out.println("Ingrese Numero de Tarjeta");
                            String Tarjeta = raja.nextLine();
                            if (Tarjeta.length() == 16 && Tarjeta.matches("[0-9]+")) {
                                System.out.println("Numero Valido");
                                while (true) {
                                    System.out.println("Ingrese CVV");
                                    String ICV = raja.nextLine();
                                    if (ICV.length() == 3 && ICV.matches("[0-9]+")) {
                                        System.out.println("Numero Valido");
                                        while (true) {
                                            System.out.print("Ingresa la fecha de expiración de la tarjeta (MM/yy): ");
                                            String fechaExpiracion = raja.nextLine();
                                            boolean esVigente = verificar(fechaExpiracion);
                                            if (esVigente) {
                                                System.out.println("La tarjeta está vigente.");
                                                break;
                                            } else {
                                                System.out.println("La tarjeta ha expirado.");
                                            }
                                        }
                                        break;
                                    } else {
                                        System.out.println("Numero no Valido");
                                    }
                                }
                                raja.nextLine();

                                break;
                            } else {
                                System.out.println("Numero no Valido");
                            }
                        }
                        Factura();
                        break;
                    default:
                        System.out.println("Esta opcion no existe");
                        break;
                }
                break;
            case "2":
                System.out.println("La compra ha sido cancelada");
                ArraysPrecios.clear();
                ArraysProductos.clear();
                break;
            default:
                System.out.println("Esta Ocion No Existe");
                break;
        }
    }

    public static boolean verificar(String fechaExpiracion) {
        try {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/yy");
            YearMonth fechaExp = YearMonth.parse(fechaExpiracion, formatter);
            YearMonth fechaActual = YearMonth.now();
            return !fechaExp.isBefore(fechaActual);
        } catch (DateTimeParseException e) {
            System.out.println("La fecha ingresada no es válida. Por favor, usa el formato MM/yy.");
            return false;
        }
    }

    public void Factura() {
        System.out.println("""
                Desea Exportar Una Factura?
                | 1 | Si         | 2 | No""");
        String OpcFactura = raja.nextLine();
        switch (OpcFactura) {
            case "1":
                double ResultadoProductos=sumarPrecios();
                try (FileWriter Imprimir = new FileWriter("D:\\FacturaGloria.txt")) {
                    Imprimir.write("|-------------------------Gloria-----------------------------|\n");
                    Imprimir.write("|Cliente: "+ApellidoIngresado+" "+NombreIngresado+"\n");
                    Imprimir.write("|Cantidad|------------------Productos-----------------|Precio|\n");
                    for (String sau : ArraysProductos) {
                        Imprimir.write(sau + "\n");
                    }
                    Imprimir.write("|------------------------------------------------------------|\n");
                    double Igvsau = ResultadoProductos * 0.18;
                    double ResultadoIGV = ResultadoProductos - Igvsau;
                    Imprimir.write("| SUB TOTAL     : S/" + ResultadoIGV + "\n");
                    Imprimir.write("| IGV           : S/" + Igvsau + "\n");
                    Imprimir.write("| TOTAL A PAGAR : S/" + ResultadoProductos + "\n");
                    Imprimir.write("|-----------------------------------------------------|------|\n");
                    System.out.println("Exportado correctamente en: " + "D:\\FacturaGloria.txt");
                    MenuPrincipal();
                }catch (IOException e) {
                    System.err.println("Error al crear el archivo en: " + "D:\\FacturaGloria.txt");
                    MenuPrincipal();
                }
                break;
            case "2":
                System.out.println("La compra se realizo");
                ArraysPrecios.clear();
                ArraysProductos.clear();
                break;
            default:
                System.out.println("Esta Opcion no existe");
                break;
        }
